// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package expenses.proxies;

public class Profilpicture extends system.proxies.Image
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Expenses.Profilpicture";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PublicThumbnailPath("PublicThumbnailPath"),
		EnableCaching("EnableCaching"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		TeamMember_Profilpicture("Expenses.TeamMember_Profilpicture");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Profilpicture(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Profilpicture(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject profilpictureMendixObject)
	{
		super(context, profilpictureMendixObject);
		if (!profilpictureMendixObject.isInstanceOf(entityName)) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static expenses.proxies.Profilpicture initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new expenses.proxies.Profilpicture(context, mendixObject);
	}

	public static expenses.proxies.Profilpicture load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return expenses.proxies.Profilpicture.initialize(context, mendixObject);
	}

	public static java.util.List<expenses.proxies.Profilpicture> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> expenses.proxies.Profilpicture.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of TeamMember_Profilpicture
	 */
	public final expenses.proxies.TeamMember getTeamMember_Profilpicture() throws com.mendix.core.CoreException
	{
		return getTeamMember_Profilpicture(getContext());
	}

	/**
	 * @param context
	 * @return value of TeamMember_Profilpicture
	 * @throws com.mendix.core.CoreException
	 */
	public final expenses.proxies.TeamMember getTeamMember_Profilpicture(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		expenses.proxies.TeamMember result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TeamMember_Profilpicture.toString());
		if (identifier != null) {
			result = expenses.proxies.TeamMember.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of TeamMember_Profilpicture
	 * @param teammember_profilpicture
	 */
	public final void setTeamMember_Profilpicture(expenses.proxies.TeamMember teammember_profilpicture)
	{
		setTeamMember_Profilpicture(getContext(), teammember_profilpicture);
	}

	/**
	 * Set value of TeamMember_Profilpicture
	 * @param context
	 * @param teammember_profilpicture
	 */
	public final void setTeamMember_Profilpicture(com.mendix.systemwideinterfaces.core.IContext context, expenses.proxies.TeamMember teammember_profilpicture)
	{
		if (teammember_profilpicture == null) {
			getMendixObject().setValue(context, MemberNames.TeamMember_Profilpicture.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.TeamMember_Profilpicture.toString(), teammember_profilpicture.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final expenses.proxies.Profilpicture that = (expenses.proxies.Profilpicture) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
